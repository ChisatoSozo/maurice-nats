# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RemoveSong(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RemoveSong()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRemoveSong(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RemoveSong
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RemoveSong
    def Index(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def RemoveSongStart(builder):
    builder.StartObject(1)

def Start(builder):
    RemoveSongStart(builder)

def RemoveSongAddIndex(builder, index):
    builder.PrependInt32Slot(0, index, 0)

def AddIndex(builder, index):
    RemoveSongAddIndex(builder, index)

def RemoveSongEnd(builder):
    return builder.EndObject()

def End(builder):
    return RemoveSongEnd(builder)
